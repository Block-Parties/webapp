import WalletHelper from "$lib/api/wallet_helper"
import { BigNumber, ethers } from "ethers"
import WyvernABI from "./wyvern_exchange_abi"

module WyvernExchangeHost {

    const RINKEBY_ADDRESS = "0xe9CFe13203364f5d842b5308beF0900424FB3cd6"

    let contract: ethers.Contract
    let signer: ethers.Signer

    /** Initialize connection to contract */
    async function initialize() {
        const metamaskProvider = await WalletHelper.getProvider()
        const provider = new ethers.providers.Web3Provider(metamaskProvider)

        signer = provider.getSigner()
        contract = new ethers.Contract(RINKEBY_ADDRESS, WyvernABI, signer)
    }

    export async function getState(partyId: ethers.BigNumberish) {
        if (contract == null) await initialize()

        return await contract.getState(partyId)
    }

    /** Create a new party on chain. Returns its ID. */
    export async function createParty(tokenAddress: string, tokenId: ethers.BigNumberish, buyPrice: ethers.BigNumberish, resalePrice: ethers.BigNumberish): Promise<BigNumber> {
        if (contract == null) await initialize()

        const tx: ethers.ContractTransaction = await contract.createParty(tokenAddress, tokenId, buyPrice, resalePrice)
        const receipt = await tx.wait()

        // extract new party ID from Created event
        const decodedEvent = ethers.utils.defaultAbiCoder.decode(
            ['uint256', 'address', 'uint256'],
            receipt.logs[0].data
        )

        return decodedEvent[0]
    }

    export async function buy(party) {
        if (contract == null) await initialize()

        console.log("SAY SOMETHING")
        const response = await fetch("http://localhost:8001/buy?" + new URLSearchParams({
            network: "rinkeby",
            tokenAddress: party.tokenAddress,
            tokenId: party.tokenId,
            addr: RINKEBY_ADDRESS
        }))
        console.log(response)

        const wyvernData = await response.json()
        console.log(wyvernData)

        console.log(party.id)
        console.log(wyvernData)


        const tx = await contract.buy(party.id, wyvernData)
        console.log(tx)
        const receipt = await tx.wait()
        console.log(receipt)






        // contract.buy()
    }

    export async function sell(party) {
        if (contract == null) await initialize()

        const response = await fetch("http://localhost:8001/sell?" + new URLSearchParams({
            network: "rinkeby",
            tokenAddress: party.tokenAddress,
            tokenId: party.tokenId,
            resalePrice: party.resalePrice,

            addr: RINKEBY_ADDRESS
        }))

        const transaction: ethers.Transaction = await response.json()
        // transaction.gasPrice = BigNumber.from(5205617).toHexString()
        transaction.from = await signer.getAddress()
        transaction.gasPrice = await signer.getGasPrice()
        transaction.gasLimit = BigNumber.from(10000000)
        console.log(transaction)



        // const asd = await signer.checkTransaction(transaction)
        // console.log(asd)


        const tx = await signer.sendTransaction(transaction)
        console.log(tx)

        const receipt = await tx.wait()
        console.log(receipt)



        // const tx = await contract.relist(party.id, transaction)
        // console.log(tx)
        // const receipt = await tx.wait()
        // console.log(receipt)

        // console.log(response)


    }
}

export default WyvernExchangeHost


/*
0xab834bab0000000000000000000000005206e78b21ce315ce284fb24cf05e0585a93b1d90000000000000000000000000c430409fb9d51ce07bbcdbc4f1954f3633bc6a900000000000000000000000057bda314c33d287b5eda2ac20239f7b2a01e1cf9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088b48f654c30e99bc2e4a1559b4dcf1ad93fa656000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005206e78b21ce315ce284fb24cf05e0585a93b1d900000000000000000000000057bda314c33d287b5eda2ac20239f7b2a01e1cf900000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000088b48f654c30e99bc2e4a1559b4dcf1ad93fa6560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000613991d9000000000000000000000000000000000000000000000000000000000000000029f1fc91a4ea7a07315ef1fe788c0c8c6e5fab9e2c9101704bd1fca81e99266f00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003782dace9d9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060b80a0b00000000000000000000000000000000000000000000000000000000000000006c2c9abe6c312f39d524214d55b88ed0292424e4120ab264acc84c44ca2c07fa000000000000000000000000000000000000000000000000000000000000007a000000000000000000000000000000000000000000000000000000000000008a000000000000000000000000000000000000000000000000000000000000009a00000000000000000000000000000000000000000000000000000000000000aa00000000000000000000000000000000000000000000000000000000000000ac0000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001c260ab9144f394afe9d5bcacee3fa608d47c7e638fe4e619d5fd6703c780663a11796ba165abf243b15bcdb300eff3e8bddb73fa28ff07fa0e01c560370140c5f260ab9144f394afe9d5bcacee3fa608d47c7e638fe4e619d5fd6703c780663a11796ba165abf243b15bcdb300eff3e8bddb73fa28ff07fa0e01c560370140c5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4f242432a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c430409fb9d51ce07bbcdbc4f1954f3633bc6a957bda314c33d287b5eda2ac20239f7b2a01e1cf9000000000000020000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4f242432a00000000000000000000000057bda314c33d287b5eda2ac20239f7b2a01e1cf9000000000000000000000000000000000000000000000000000000000000000057bda314c33d287b5eda2ac20239f7b2a01e1cf9000000000000020000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
*/